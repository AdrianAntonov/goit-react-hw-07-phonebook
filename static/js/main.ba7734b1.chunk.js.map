{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","services/contacts-api.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","redux/phonebook/phonebook-selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","fetchContacts","a","axios","get","data","addingContact","contact","post","deleteContacts","id","delete","defaults","baseURL","createAsyncThunk","_","rejectWithValue","contactsAPI","contacts","name","phone","addContact","deleteContact","deletedContact","filterContact","createAction","itemsReducer","createReducer","fulfilled","payload","state","filter","loadingContacts","pending","rejected","itemsFilter","combineReducers","items","loading","store","configureStore","reducer","phonebookReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","contactsState","createSelector","filterToLowerCase","toLowerCase","includes","contactList","ContactForm","useState","setName","setPhone","contactsItems","useSelector","dispatch","useDispatch","reset","changeHandler","e","target","value","className","styles","form","onSubmit","preventDefault","console","log","find","item","alert","phonebookOperations","type","pattern","title","required","onChange","add","ContactList","useEffect","list","map","button","onClick","Filter","htmlFor","input","phonebookActions","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba7734b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1AJxY\",\"add\":\"ContactForm_add__3mBCb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2bX1E\",\"button\":\"ContactList_button__Lzu3d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1FTAa\"};","import axios from \"axios\";\naxios.defaults.baseURL = \"https://61987e15164fa60017c230b2.mockapi.io/api/v1/\";\n\nexport async function fetchContacts() {\n  const { data } = await axios.get(\"/contacts\");\n\n  return data;\n}\n\nexport async function addingContact(contact) {\n  const { data } = await axios.post(\"/contacts\", contact);\n\n  return data;\n}\n\nexport async function deleteContacts(id) {\n  const { data } = await axios.delete(`/contacts/${id}`);\n\n  return data;\n}\n","import axios from \"axios\";\nimport * as contactsAPI from \"../../services/contacts-api\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = \"https://61987e15164fa60017c230b2.mockapi.io/api/v1/\";\n\nexport const fetchContacts = createAsyncThunk(\n  \"contacts/fetchContacts\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const contacts = await contactsAPI.fetchContacts();\n      return contacts;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const addingContact = createAsyncThunk(\n  \"contacts/addContact\",\n  async ({ name, phone }, { rejectWithValue }) => {\n    try {\n      const contact = { name, phone };\n      const addContact = await contactsAPI.addingContact(contact);\n      return addContact;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const deleteContact = createAsyncThunk(\n  \"contacts/deleteContact\",\n  async (id, { rejectWithValue }) => {\n    try {\n      const deletedContact = await contactsAPI.deleteContacts(id);\n      return deletedContact;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const filterContact = createAction(\"phonebook/filterContact\");\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  fetchContacts,\n  addingContact,\n  deleteContact,\n} from \"./phonebook-operations\";\nimport { filterContact } from \"./phonebook-actions\";\n\nconst itemsReducer = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addingContact.fulfilled]: (state, { payload }) => {\n    return [...state, payload];\n  },\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload.id),\n});\n\nconst loadingContacts = createReducer(false, {\n  [addingContact.pending]: () => true,\n  [addingContact.fulfilled]: () => false,\n  [addingContact.rejected]: () => false,\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n});\n\nconst itemsFilter = createReducer(\"\", {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: itemsFilter,\n  loading: loadingContacts,\n});\n\n// const contactsSlice = createSlice({\n//   name: \"contacts\",\n//   initialState: { items: [], loading: false, filter: \"\" },\n//   // reducers: {\n//   //   [filterContact]: (_, { payload }) => payload,\n//   //   [deleteContact.fulfilled]: (state, { payload }) =>\n//   //     state.filter(({ id }) => id !== payload.id),\n//   // },\n//   extraReducers: {\n//     [fetchContacts.fulfilled]: (state, action) => {\n//       return {\n//         ...state,\n//         items: action.payload,\n//         loading: false,\n//       };\n//     },\n//     [fetchContacts.pending]: (state) => {\n//       return {\n//         ...state,\n//         loading: true,\n//       };\n//     },\n//     [fetchContacts.rejected]: (state) => {\n//       return {\n//         ...state,\n//         loading: false,\n//       };\n//     },\n\n//     [addingContact.fulfilled]: (state, { payload }) => {\n//       return {\n//         ...state,\n//         items: [...state.items, payload],\n//         loading: false,\n//       };\n//     },\n//     [addingContact.pending]: (state) => {\n//       return {\n//         ...state,\n//         loading: true,\n//       };\n//     },\n//     [addingContact.rejected]: (state) => {\n//       return {\n//         ...state,\n//         loading: false,\n//       };\n//     },\n\n//     [deleteContact.fulfilled]: (state, { payload }) => {\n//       return {\n//         ...state,\n//         items: state.items.filter(({ id }) => id !== payload.id),\n//         loading: false,\n//       };\n//     },\n//     [deleteContact.pending]: (state) => {\n//       return {\n//         ...state,\n//         loading: true,\n//       };\n//     },\n//     [deleteContact.rejected]: (state) => {\n//       return {\n//         ...state,\n//         loading: false,\n//       };\n//     },\n\n//     [filterContact]: (state, { payload }) => {\n//       return {\n//         ...state,\n//         filter: payload,\n//       };\n//     },\n//   },\n// });\n// console.log(contactsSlice);\n\n// export default contactsSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport phonebookReducer from \"./phonebook/phonebook-reducer\";\n\nconst store = configureStore({\n  reducer: {\n    contacts: phonebookReducer,\n  },\n\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const items = (state) => state.contacts.items;\nexport const filter = (state) => state.contacts.filter;\n\nexport const contactsState = createSelector(\n  [items, filter],\n  (items, filter) => {\n    const contactList = (items) => {\n      const filterToLowerCase = filter.toLowerCase();\n\n      return items.filter(({ name }) =>\n        name.toLowerCase().includes(filterToLowerCase)\n      );\n    };\n    return contactList(items);\n  }\n);\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { items } from \"../../redux/phonebook/phonebook-selectors\";\nimport * as phonebookOperations from \"../../redux/phonebook/phonebook-operations\";\nimport styles from \"./ContactForm.module.css\";\n\nexport default function ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const contactsItems = useSelector(items);\n  const dispatch = useDispatch();\n  const reset = () => {\n    setName(\"\");\n    setPhone(\"\");\n  };\n\n  const changeHandler = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"phone\":\n        setPhone(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    console.log(contactsItems);\n    const check = contactsItems.find((item) => item.name === name);\n    if (check) {\n      alert(`${name} is already in Contacts`);\n      reset();\n      return;\n    } else {\n      dispatch(phonebookOperations.addingContact({ name, phone }));\n    }\n    reset();\n  };\n\n  return (\n    <div className={styles.form}>\n      <h3>Name</h3>\n      <form onSubmit={submitHandler}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={changeHandler}\n        />\n\n        <h3>Number</h3>\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          value={phone}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={changeHandler}\n        />\n        <br />\n        <button className={styles.add} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n}\n\nContactForm.propTypes = {\n  addingContact: PropTypes.func,\n  items: PropTypes.array,\n};\n","import PropTypes from \"prop-types\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { contactsState } from \"../../redux/phonebook/phonebook-selectors\";\nimport * as phonebookOperations from \"../../redux/phonebook/phonebook-operations\";\nimport styles from \"./ContactList.module.css\";\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(phonebookOperations.fetchContacts());\n  }, [dispatch]);\n\n  const contactList = useSelector(contactsState);\n\n  return (\n    <div className={styles.list}>\n      {contactList.map((item) => (\n        <li key={item.id}>\n          <span>{item.name}</span> <span>{item.phone}</span>\n          <button\n            type=\"button\"\n            className={styles.button}\n            onClick={() => dispatch(phonebookOperations.deleteContact(item.id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </div>\n  );\n}\n\nContactList.propTypes = {\n  deleteContact: PropTypes.func,\n  contactList: PropTypes.array,\n};\n","// import { connect } from \"react-redux\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport * as phonebookActions from \"../../redux/phonebook/phonebook-actions\";\nimport { filter } from \"../../redux/phonebook/phonebook-selectors\";\nimport styles from \"./Filter.module.css\";\n\nexport default function Filter() {\n  const value = useSelector(filter);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={styles.filter}>\n      <label htmlFor=\"filter\">Find contacts by name</label>\n      <br />\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"filter\"\n        id=\"filter\"\n        value={value}\n        onChange={(e) =>\n          dispatch(phonebookActions.filterContact(e.target.value))\n        }\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n};\n","import { useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport \"./App.css\";\n\nexport default function App() {\n  const contacts = useSelector((state) => state.contacts.items);\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {contacts && <ContactList />}\n    </div>\n  );\n}\n\nApp.propTypes = {\n  contacts: PropTypes.object,\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}